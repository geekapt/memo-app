version: '3.8'

services:
  mongo:
    image: mongo:latest
    container_name: mongo-db
    ports:
      - "27017:27017"
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    healthcheck:
      test: ["CMD", "mongosh", "--username", "${MONGO_INITDB_ROOT_USERNAME}", "--password", "${MONGO_INITDB_ROOT_PASSWORD}", "--authenticationDatabase", "${MONGO_INITDB_ROOT_USERNAME}", "--eval", "db.${MONGO_INITDB_ROOT_USERNAME}Command('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - mongo-data:/data/db
    networks:
      - memo-network

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: memo-backend
    ports:
      - "5000:5000"
    restart: unless-stopped
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      DATABASE: ${DATABASE}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      JWT_COOKIE_EXPIRES: ${JWT_COOKIE_EXPIRES}
    volumes:
      - ./server/uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - memo-network
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: memo-frontend
    ports:
      - "3000:3000"
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      REACT_APP_API_URL: http://backend:5000/api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - memo-network

volumes:
  mongo-data:
    driver: local

networks:
  memo-network:
    driver: bridge

